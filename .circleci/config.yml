version: 2.1

executors:
  php:
    parameters:
      php-version: { type: string, default: "7.2" }
    docker:
    - image: circleci/php:<< parameters.php-version >>-browsers
      environment:
        CIRCLE_EXECUTOR: php
  stack:
    parameters:
      php-version: { type: string, default: "7.2" }
    docker:
    - image: circleci/php:<< parameters.php-version >>-browsers
      environment:
        CIRCLE_EXECUTOR: stack
    - image: docker.elastic.co/elasticsearch/elasticsearch:7.11.1
      name: elasticsearch
      environment:
        cluster.name: es-cluster
        node.name: es-node
        bootstrap.memory_lock: true
        discovery.type: single-node
        xpack.security.enabled: true
        xpack.license.self_generated.type: trial
        xpack.security.authc.api_key.enabled: true
        ELASTIC_PASSWORD: password
    - image: docker.elastic.co/enterprise-search/enterprise-search:7.11.1
      name: appsearch
      environment:
        elasticsearch.host: http://elasticsearch:9200
        elasticsearch.password: password
        ENT_SEARCH_DEFAULT_PASSWORD: password
        secret_management.encryption_keys: "[changeme]"
        allow_es_settings_modification: true

commands:
  install_deps:
    steps:
    - checkout
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "composer.json" }}
    - run:
        name: Install composer dependencies
        command: composer install -n --prefer-dist
    - save_cache:
        paths:
        - ~/.composer/cache/
        key: v1-dependencies-{{ checksum "composer.json" }}

jobs:
  unit-tests:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    steps:
    - install_deps
    - run:
        name: Unit testing
        command: vendor/bin/phpunit -c phpunit.xml.dist --testsuite unit
  integration-tests:
    parameters:
      executor:
        type: executor
    executor: << parameters.executor >>
    steps:
    - install_deps
    - run:
        name: Configuring App Search
        command: |
          if [ $CIRCLE_EXECUTOR = "stack" ]; then
            export AS_URL="http://appsearch:3002"
            export ES_URL="http://elasticsearch:9200"
            source .circleci/retrieve-credentials.sh
            echo "export AS_URL=$AS_URL" >> $BASH_ENV
            echo "export AS_PRIVATE_KEY=$AS_PRIVATE_KEY" >> $BASH_ENV
            echo "export AS_SEARCH_KEY=$AS_SEARCH_KEY" >> $BASH_ENV
          fi
    - run:
        name: Integration testing
        command: AS_ENGINE_NAME="php-integration-test-$CIRCLE_BUILD_NUM" vendor/bin/phpunit -c phpunit.xml.dist --testsuite integration
  qa-phplint:
    executor: php
    steps:
    - install_deps
    - run:
        name: PHPLint
        command: vendor/bin/phplint . --exclude=vendor
  qa-phpcs:
    executor: php
    steps:
    - install_deps
    - run:
        name: PHPCS
        command: vendor/bin/phpcs --ignore=vendor,resources .
  build-test-image:
    docker:
    - image: circleci/golang
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Building docker test image
        command: docker build . --target test_image -t elastic/app_search_php_client_test:latest
    - run:
        name: Export docker test image
        command: docker save elastic/app_search_php_client_test:latest | gzip -9 > app_search_php_client_test_docker_image.tar.gz
    - store_artifacts:
        path: ./app_search_php_client_test_docker_image.tar.gz
        destination: app_search_php_client_test_docker_image.tar.gz

workflows:
  version: 2
  build-and-test:
    jobs:
    - qa-phplint
    - qa-phpcs
    - unit-tests:
        name: php-73-unit-tests
        executor: { name: php, php-version: "7.3" }
        requires:
        - qa-phplint
        - qa-phpcs
    - integration-tests:
        name: php-73-integration-tests
        executor: { name: stack, php-version: "7.3" }
        requires:
        - php-73-unit-tests
    - unit-tests:
        name: php-72-unit-tests
        executor: { name: php, php-version: "7.2" }
        requires:
          - qa-phplint
          - qa-phpcs
    - integration-tests:
        name: php-72-integration-tests
        executor: { name: stack, php-version: "7.2" }
        requires:
        - php-72-unit-tests
    - unit-tests:
        name: php-71-unit-tests
        executor: { name: php, php-version: "7.1" }
        requires:
          - qa-phplint
          - qa-phpcs
    - integration-tests:
        name: php-71-integration-tests
        executor: { name: stack, php-version: "7.1" }
        requires:
        - php-71-unit-tests
    - unit-tests:
        name: php-70-unit-tests
        executor: { name: php, php-version: "7.0" }
        requires:
          - qa-phplint
          - qa-phpcs
    - integration-tests:
        name: php-70-integration-tests
        executor: { name: stack, php-version: "7.0" }
        requires:
        - php-70-unit-tests
    - unit-tests:
        name: php-56-unit-tests
        executor: { name: php, php-version: "5.6" }
        requires:
          - qa-phplint
          - qa-phpcs
    - integration-tests:
        name: php-56-integration-tests
        executor: { name: stack, php-version: "5.6" }
        requires:
        - php-56-unit-tests
    - build-test-image:
        filters:
          branches:
            only: master
        requires:
        - php-56-unit-tests
        - php-56-integration-tests
        - php-70-unit-tests
        - php-70-integration-tests
        - php-71-unit-tests
        - php-71-integration-tests
        - php-72-unit-tests
        - php-72-integration-tests
        - php-73-unit-tests
        - php-73-integration-tests
  nightly:
    triggers:
    - schedule:
        cron: "0 0 * * *"
        filters:
          branches:
            only:
            - master
    jobs:
    - unit-tests:
        executor: { name: php, php-version: "7.3" }
    - integration-tests:
        executor: { name: stack, php-version: "7.3" }
        requires:
        - unit-tests
    - build-test-image:
        requires:
        - unit-tests
        - integration-tests
